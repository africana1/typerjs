{"version":3,"sources":["main.js"],"names":["TypeWriter","textElement","words","wait","text","wordIndex","parseInt","type","isDeleting","initialize","elementId","wordList","document","getElementById","JSON","parse","getAttribute","prototype","current","length","fullText","substring","innerHTML","typeSpeed","setTimeout"],"mappings":";AACA,IAAMA,EAAa,SAAUC,EAAaC,GAAOC,IAAAA,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,OACjDF,KAAAA,YAAcA,EACdC,KAAAA,MAAQA,EACRE,KAAAA,KAAO,GACPC,KAAAA,UAAY,EACZF,KAAAA,KAAOG,SAASH,EAAM,IACtBI,KAAAA,OACAC,KAAAA,YAAa,GAqDpB,SAASC,EAAWC,EAAWC,GACvBV,IAAAA,EAAcW,SAASC,eAAeH,GACtCR,EAAQY,KAAKC,MAAMJ,GACnBR,EAAOF,EAAYe,aAAa,aAGlChB,IAAAA,EAAWC,EAAaC,EAAOC,GAvDrCH,EAAWiB,UAAUV,KAAO,WAAY,IAAA,EAAA,KAEhCW,EAAU,KAAKb,UAAY,KAAKH,MAAMiB,OAGtCC,EAAW,KAAKlB,MAAMgB,GAGxB,KAAKV,WAEFJ,KAAAA,KAAOgB,EAASC,UAAU,EAAG,KAAKjB,KAAKe,OAAS,GAGhDf,KAAAA,KAAOgB,EAASC,UAAU,EAAG,KAAKjB,KAAKe,OAAS,GAIlDlB,KAAAA,YAAYqB,UAAkC,sBAAA,OAAA,KAAKlB,KAjBlB,WAoBlCmB,IAAAA,EAAY,IAEZ,KAAKf,aACPe,GAAa,GAGV,KAAKf,YAAc,KAAKJ,OAASgB,EAM3B,KAAKZ,YAA4B,KAAd,KAAKJ,OAC5BI,KAAAA,YAAa,EAGbH,KAAAA,YAGLkB,EAAY,MAXZA,EAAY,KAAKpB,KAGZK,KAAAA,YAAa,GAWpBgB,WAAW,WAAM,OAAA,EAAKjB,QAAQgB","file":"main.eaec1e8a.js","sourceRoot":"..","sourcesContent":["//* ES5 implementation\nconst TypeWriter = function (textElement, words, wait = '3000') {\n  this.textElement = textElement;\n  this.words = words;\n  this.text = '';\n  this.wordIndex = 0;\n  this.wait = parseInt(wait, 10);\n  this.type();\n  this.isDeleting = false;\n};\n\n//* Type Method\nTypeWriter.prototype.type = function () {\n  //current index of word\n  const current = this.wordIndex % this.words.length;\n\n  //get full text of current word\n  const fullText = this.words[current];\n\n  //check if deleting\n  if (this.isDeleting) {\n    // remove char\n    this.text = fullText.substring(0, this.text.length - 1);\n  } else {\n    // add char\n    this.text = fullText.substring(0, this.text.length + 1);\n  }\n\n  // insert text into element\n  this.textElement.innerHTML = `<span class=\"text\">${this.text}<span/>`;\n\n  // initial type speed\n  let typeSpeed = 500;\n\n  if (this.isDeleting) {\n    typeSpeed /= 2;\n  }\n\n  if (!this.isDeleting && this.text === fullText) {\n    // make pause at end\n    typeSpeed = this.wait;\n\n    //set delete to true\n    this.isDeleting = true;\n  } else if (this.isDeleting && this.text === '') {\n    this.isDeleting = false;\n\n    // move to the next word\n    this.wordIndex++;\n\n    //pause before start typing\n    typeSpeed = 500;\n  }\n\n  setTimeout(() => this.type(), typeSpeed);\n};\n\n//* Init on DOM Load\n//document.addEventListener('DOMContentLoaded', initialize);\n\n//* Init App\nfunction initialize(elementId, wordList) {\n  const textElement = document.getElementById(elementId);\n  const words = JSON.parse(wordList);\n  const wait = textElement.getAttribute('data-wait');\n\n  //* Initialize TypeWriter\n  new TypeWriter(textElement, words, wait);\n}\n"]}